#! C:\Python36\python.exe
'''
服务端Socket
'''
from socket import socket


def func():
    pass


# 服务端地址（IP+端口=WEB中的唯一进程）
host = "127.0.0.1"
port = 1234

if __name__ == "__main__":
    # 创建服务端socket对象
    serverSocket = socket()

    # 绑定到IP和端口
    serverSocket.bind((host, port))
    serverSocket.listen(128)  # 最大待连接数（128以后的客户端请求会被拒绝，默认同时连接为5,）

    while True:
        # 阻塞等待，并接入一个客户端socket
        clientSocket, clientAddress = serverSocket.accept()

        while True:
            # 愉快地IO
            msg = clientSocket.recv(1024).decode("utf-8")  # 接收客户端消息
            print("收到客户端%s消息：%s" % (clientAddress[1], msg))  # 第一个占位符：用客户端端口作为客户端识别码

            # 发送消息给客户端
            clientSocket.send(("本宫已阅：" + msg).encode("utf-8"))

            if msg == "呵呵":
                # 断开与当前客户端的连接（以便接入下一个客户端）
                clientSocket.close()
                print("已断开与客户端%s的连接" % (clientAddress[1]))
                break
                
    print("main over")
    
    
    
    
#客户端
#! C:\Python36\python.exe
'''
about what
'''
from socket import socket


def func():
    pass


host = "127.0.0.1"
port = 1234

if __name__ == "__main__":
    # 创建套接字对象
    clientSocket = socket()

    # 通过服务端地址（IP+端口），申请连接服务端socket
    res = clientSocket.connect((host, port))
    print(res)  # None

    while True:

        try:
            msg = input("你对ta说：")

            # 向服务端发送消息（bytes）
            clientSocket.send(msg.encode("utf-8"))

            # 接收服务端消息（bytes）
            msg = clientSocket.recv(1024).decode("utf-8")
            print("收到服务端消息：", msg)
        except ConnectionAbortedError:
            print("服务端已断开连接")
            break

    print("main over")

